#include "IRQs.h"
#include "em_device.h"
#include "em_timer.h"
#include "bsp.h"
#include <stdint.h>
#include <stdbool.h>
#include "em_device.h"
#include "em_chip.h"
#include "em_cmu.h"
#include "em_emu.h"
#include "bsp_trace.h"


extern enum commands;
volatile bool Button0pressed = false;
volatile bool Button1pressed = false;
uint32_t currentTicks;
volatile bool ButtonPushedFirstTime=true;
short actualCommand=idle;
volatile uint32_t msTicks=0;
bool gotInput=false;
int sliderPos=-1;

//amikor interrupt erkezik systick-tol szamolunk felfele
void SysTick_Handler(void)
{
	msTicks++;
}

void ButtonWasPushed()
{
	//ha barmelyik gomb meg lett nyomva jelezzuk,hogy jel erkezett a bemeneten
	if(Button0pressed || Button1pressed)
	{

			currentTicks=msTicks;
			gotInput=true;

	}
}




//ez fog majd kelleni a main fuggvenybe
//beallitja,hogy milyen utasitast kell majd vegrehajtani
void Setcommand()
{

	uint32_t currDiff=0;
	//ha nem jott be semmilyen jel akkor varunk bemeneti valtozast
	if(!gotInput){
		ButtonWasPushed();
		sliderPos=CAPLESENSE_getSliderPosition();
		if(sliderPos!=(-1))
			{
				currentTicks=msTicks;
				gotInput=true;
			}
		}
	//ha erkezett valami a bemeneten szamoljuk mennyi ideje tortent
	if(gotInput)
		currDiff=msTicks-currentTicks;
	//ha elerjuk a kivant idot ami most kb 300 ms lekerdezzuk a bemeneteket
	//bemenetek alapjan beallitjuk mit kell tennie a jateknak, gomb bemenet prioritasa nagyobb mint a slidere
	if(currDiff>300)
	{
		if(sliderPos>30)
		{
			actualCommand=stepright;
		}

		if(sliderPos>-1&&sliderPos<15)
		{
			actualCommand=stepleft;
		}

		if(Button0pressed && Button1pressed)
		{
			actualCommand=shoot;
		}
		if(!Button0pressed && Button1pressed)
		{
			actualCommand=stepup;
		}

		if(Button0pressed && !Button1pressed)
		{
			actualCommand=stepdown;
		}
		if(ButtonPushedFirstTime)
		{
					actualCommand=start;
					ButtonPushedFirstTime=false;
		}

		Button0pressed=false;
		Button1pressed=false;
		gotInput=false;
	}
	else
				actualCommand=idle;
}





